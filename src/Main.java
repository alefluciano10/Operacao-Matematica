import java.util.ArrayList;
import java.util.InputMismatchException;
import java.util.List;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);
        OperacaoMatematica op = new OperacaoMatematica();
        List<String> historico = new ArrayList<>();
        int operacao;

        do {
            System.out.println("\n===============================");
            System.out.println("      üßÆ CALCULADORA JAVA      ");
            System.out.println("===============================");
            System.out.println("1 ‚û§ Adi√ß√£o");
            System.out.println("2 ‚û§ Subtra√ß√£o");
            System.out.println("3 ‚û§ Multiplica√ß√£o");
            System.out.println("4 ‚û§ Divis√£o");
            System.out.println("5 ‚û§ Hist√≥rico");
            System.out.println("0 ‚û§ Sair");
            System.out.print("\nEscolha uma opera√ß√£o: ");

            try {
                operacao = sc.nextInt();
            } catch (InputMismatchException e) {
                System.out.println("\n‚ùå Entrada inv√°lida! Digite apenas n√∫meros.");
                sc.next(); // limpa o buffer
                continue;
            }

            if (operacao == 0) {
                System.out.println("\nEncerrando o programa... üëã");
                break;
            }

            if (operacao == 5) {
                if (historico.isEmpty()) {
                    System.out.println("\nüìÑ Nenhuma opera√ß√£o realizada ainda.");
                } else {
                    System.out.println("\n===== HIST√ìRICO =====");
                    historico.forEach(System.out::println);
                }
                continue;
            }

            if (operacao < 1 || operacao > 4) {
                System.out.println("\n‚ùå Op√ß√£o inv√°lida! Tente novamente.");
                continue;
            }

            // Solicita os n√∫meros
            System.out.println("\n===== OPERA√á√ÉO MATEM√ÅTICA =====");
            double num1 = lerNumero(sc, "Digite o primeiro n√∫mero: ");
            double num2 = lerNumero(sc, "Digite o segundo n√∫mero: ");

            try {
                double resultado = switch (operacao) {
                    case 1 -> op.somar(num1, num2);
                    case 2 -> op.subtrair(num1, num2);
                    case 3 -> op.multiplicar(num1, num2);
                    case 4 -> op.dividir(num1, num2);
                    default -> 0;
                };

                String simbolo = switch (operacao) {
                    case 1 -> "+";
                    case 2 -> "-";
                    case 3 -> "√ó";
                    case 4 -> "√∑";
                    default -> "";
                };

                String registro = String.format("%.2f %s %.2f = %.2f", num1, simbolo, num2, resultado);
                historico.add(registro);

                System.out.printf("\n‚úÖ Resultado: %.2f%n", resultado);

            } catch (IllegalArgumentException e) {
                System.out.println("\n‚ùå " + e.getMessage());
            }
        } while (true);

        sc.close();
    }

    // üîπ Metodo auxiliar para ler n√∫mero com valida√ß√£o
    private static double lerNumero(Scanner sc, String mensagem) {
        while (true) {
            System.out.print(mensagem);
            try {
                return sc.nextDouble();
            } catch (InputMismatchException e) {
                System.out.println("‚ùå Valor inv√°lido! Digite um n√∫mero v√°lido.");
                sc.next(); // limpa o buffer
            }

        }
    }
}
